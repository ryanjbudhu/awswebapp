{"ast":null,"code":"import _objectSpread from \"/Users/ryanbudhu/VentureLinkAssignment/webapp/firstwebapp/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/ryanbudhu/VentureLinkAssignment/webapp/firstwebapp/src/RunForm.js\";\nimport React, { Component } from 'react';\nimport { Button, Checkbox, Form } from 'semantic-ui-react';\nexport default class RunForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFieldChange = event => {\n      const _event$target = event.target,\n            value = _event$target.value,\n            name = _event$target.name;\n      this.setState(_objectSpread({}, this.state, {\n        [name]: value\n      }));\n\n      if (event.target.name === \"hour\" || event.target.name === \"minute\" || event.target.name === \"second\") {\n        this.setState({\n          loading: false\n        });\n      }\n    };\n\n    this.state = {\n      loading: true,\n      error: \"\",\n      mileage: 0,\n      unit: \"none\",\n      hour: 0,\n      minute: 0,\n      second: 0\n    };\n    this.handleFieldChange = this.handleFieldChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    if (!this.isFormValid()) {\n      this.setState({\n        error: \"All fields are required.\"\n      });\n      return;\n    }\n  }\n\n  isFormValid() {\n    return this.state.mileage !== \"0\" && this.state.unit !== \"none\";\n  }\n\n  renderError() {\n    return this.state.error ? React.createElement(\"div\", {\n      className: \"alert-red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, this.state.error) : null;\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      lable: \"Amount Run\",\n      type: \"number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Form.Select, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      fluid: true,\n      lable: \"Hours\",\n      type: \"number\",\n      min: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      fluid: true,\n      lable: \"Minutes\",\n      type: \"number\",\n      min: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      fluid: true,\n      lable: \"Minutes\",\n      type: \"number\",\n      min: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), React.createElement(Form.Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Enter Run\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/ryanbudhu/VentureLinkAssignment/webapp/firstwebapp/src/RunForm.js"],"names":["React","Component","Button","Checkbox","Form","RunForm","constructor","props","handleFieldChange","event","target","value","name","setState","state","loading","error","mileage","unit","hour","minute","second","bind","onSubmit","e","preventDefault","isFormValid","renderError","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Checkbox, Form } from 'semantic-ui-react'\n\n\nexport default class RunForm extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tloading: true,\n\t\t\terror: \"\",\n\t\t\tmileage: 0,\n\t\t\tunit: \"none\",\n\t\t\thour: 0,\n\t\t\tminute: 0,\n\t\t\tsecond: 0\n\t\t};\n\t\t\n\t\tthis.handleFieldChange = this.handleFieldChange.bind(this);\n\t\tthis.onSubmit = this.onSubmit.bind(this);\n\t}\n\t\n\thandleFieldChange = event => {\n\t\tconst { value, name } = event.target;\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\t[name]: value\n\t\t});\n\t\tif (event.target.name===\"hour\" || event.target.name===\"minute\" || event.target.name===\"second\"){\n\t\t\tthis.setState({ \n\t\t\t\tloading: false \n\t\t\t});\n\t\t}\n\t};\n\t\n\tonSubmit(e) {\n\t\te.preventDefault();\n\t\t\n\t\tif (!this.isFormValid()) {\n\t\t\tthis.setState({ error: \"All fields are required.\" });\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t\n\t}\n\n\tisFormValid() {\n\t\treturn this.state.mileage !== \"0\" && this.state.unit !== \"none\";\n\t}\n\t\t\n\t\n\t\n\trenderError() {\n\t\treturn this.state.error ? (\n\t\t\t<div className=\"alert-red\">{this.state.error}</div>\n\t\t) : null;\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<Form>\n\t\t\t\t\t<Form.Group widths=\"equal\">\n\t\t\t\t\t\t<Form.Input lable=\"Amount Run\" type=\"number\" />\n\t\t\t\t\t\t<Form.Select\n\t\t\t\t\t\t\tfluid\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t />\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t<Form.Group widths=\"equal\">\n\t\t\t\t\t\t<Form.Input fluid lable=\"Hours\" type=\"number\" min=\"0\" />\n\t\t\t\t\t\t<Form.Input fluid lable=\"Minutes\" type=\"number\" min=\"0\" />\n\t\t\t\t\t\t<Form.Input fluid lable=\"Minutes\" type=\"number\" min=\"0\" />\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t<Form.Button>Enter Run</Form.Button>\n\t\t\t\t</Form>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}"]},"metadata":{},"sourceType":"module"}