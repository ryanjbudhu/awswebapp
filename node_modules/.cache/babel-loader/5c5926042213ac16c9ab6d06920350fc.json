{"ast":null,"code":"var _jsxFileName = \"/Users/ryanbudhu/VentureLinkAssignment/webapp/firstwebapp/src/RunInfo.js\";\nimport React from 'react'; //import RunForm from './RunForm';\n\nimport { Table } from 'semantic-ui-react';\nexport default function RunInfo(props) {\n  const timeInSeconds = props.runInfo.hour * 3600 + props.runInfo.minute * 60 + 1 * props.runInfo.second;\n  var avgMile = props.runInfo.mileage !== 0 && timeInSeconds !== 0 ? timeInSeconds / props.runInfo.mileage : 0;\n  const hourAvg = Math.floor(avgMile / 3600);\n  avgMile %= 3600;\n  const minuteAvg = Math.floor(avgMile / 60);\n  const secondAvg = Math.floor(avgMile % 60);\n  var splits = new Array(props.runInfo.mileage);\n\n  for (var x = 0; x < props.runInfo.mileage; ++X) return React.createElement(\"div\", {\n    className: \"runInfo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, props.runInfo.mileage === \"0\" ? React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Fill out the form!\") : React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, props.runInfo.mileage, \" miles\", \" run\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Total Time: \", timeInSeconds), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Average Time: \", avgMile), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Pace Per Mile:\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, hourAvg > 0 ? hourAvg + \":\" : \"\", minuteAvg < 10 ? \"0\" + minuteAvg : minuteAvg, \":\", secondAvg < 10 ? \"0\" + secondAvg : secondAvg), props.runInfo.mileage > 0 ? React.createElement(Table, {\n    compact: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Table.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Mile\"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Time\"))), React.createElement(Table.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, this.splits.map((time, index) => React.createElement(Table.Row, {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })))) : null);\n}","map":{"version":3,"sources":["/Users/ryanbudhu/VentureLinkAssignment/webapp/firstwebapp/src/RunInfo.js"],"names":["React","Table","RunInfo","props","timeInSeconds","runInfo","hour","minute","second","avgMile","mileage","hourAvg","Math","floor","minuteAvg","secondAvg","splits","Array","x","X","map","time","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,KAAT,QAAsB,mBAAtB;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAEtC,QAAMC,aAAa,GAAID,KAAK,CAACE,OAAN,CAAcC,IAAd,GAAmB,IAApB,GAA6BH,KAAK,CAACE,OAAN,CAAcE,MAAd,GAAqB,EAAlD,GAAyD,IAAEJ,KAAK,CAACE,OAAN,CAAcG,MAA/F;AACA,MAAIC,OAAO,GAAIN,KAAK,CAACE,OAAN,CAAcK,OAAd,KAAwB,CAAxB,IAA6BN,aAAa,KAAG,CAA9C,GAAmDA,aAAa,GAACD,KAAK,CAACE,OAAN,CAAcK,OAA/E,GAAyF,CAAvG;AACA,QAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWJ,OAAO,GAAC,IAAnB,CAAhB;AACAA,EAAAA,OAAO,IAAI,IAAX;AACA,QAAMK,SAAS,GAAGF,IAAI,CAACC,KAAL,CAAWJ,OAAO,GAAC,EAAnB,CAAlB;AACA,QAAMM,SAAS,GAAGH,IAAI,CAACC,KAAL,CAAWJ,OAAO,GAAC,EAAnB,CAAlB;AAEA,MAAIO,MAAM,GAAG,IAAIC,KAAJ,CAAUd,KAAK,CAACE,OAAN,CAAcK,OAAxB,CAAb;;AACA,OAAK,IAAIQ,CAAC,GAAC,CAAX,EAAaA,CAAC,GAAGf,KAAK,CAACE,OAAN,CAAcK,OAA/B,EAAuC,EAAES,CAAzC,EAEA,OACC;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEhB,KAAK,CAACE,OAAN,CAAcK,OAAd,KAAwB,GAAxB,GACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADA,GAIG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKP,KAAK,CAACE,OAAN,CAAcK,OAAnB,mBALL,EAOC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAgBN,aAAhB,CAPD,EAQC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAkBK,OAAlB,CARD,EASC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBATD,EAUC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIE,OAAO,GAAC,CAAR,GAAYA,OAAO,GAAC,GAApB,GAA0B,EAA9B,EAAkCG,SAAS,GAAG,EAAZ,GAAiB,MAAIA,SAArB,GAAiCA,SAAnE,OAA+EC,SAAS,GAAG,EAAZ,GAAiB,MAAIA,SAArB,GAAiCA,SAAhH,CAVD,EAaEZ,KAAK,CAACE,OAAN,CAAcK,OAAd,GAAwB,CAAxB,GACA,oBAAC,KAAD;AAAO,IAAA,OAAO,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,EAEC,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,CADD,CADD,EAOC,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,KAAKM,MAAL,CAAYI,GAAZ,CAAgB,CAACC,IAAD,EAAMC,KAAN,KAChB,oBAAC,KAAD,CAAO,GAAP;AAAW,IAAA,GAAG,EAAEA,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADD,CAPD,CADA,GAiBG,IA9BL,CADD;AAkCA","sourcesContent":["import React from 'react';\n//import RunForm from './RunForm';\nimport { Table } from 'semantic-ui-react';\n\nexport default function RunInfo(props) {\n\t\n\tconst timeInSeconds = (props.runInfo.hour*3600) + (props.runInfo.minute*60) + (1*props.runInfo.second);\n\tvar avgMile = (props.runInfo.mileage!==0 && timeInSeconds!==0) ? timeInSeconds/props.runInfo.mileage : 0;\n\tconst hourAvg = Math.floor(avgMile/3600);\n\tavgMile %= 3600;\n\tconst minuteAvg = Math.floor(avgMile/60);\n\tconst secondAvg = Math.floor(avgMile%60);\n\t\n\tvar splits = new Array(props.runInfo.mileage);\n\tfor (var x=0;x < props.runInfo.mileage;++X)\n\t\n\treturn (\n\t\t<div className=\"runInfo\">\n\t\t\t{props.runInfo.mileage===\"0\" ? (\n\t\t\t\t<h2>\n\t\t\t\t\tFill out the form!\n\t\t\t\t</h2>\n\t\t\t) : <h2>{props.runInfo.mileage} miles{/*props.runInfo.unit*/} run</h2>}\n\n\t\t\t<p>Total Time: {timeInSeconds}</p>\n\t\t\t<p>Average Time: {avgMile}</p>\n\t\t\t<h3>Pace Per Mile:</h3>\n\t\t\t<p>{hourAvg>0 ? hourAvg+\":\" : \"\"}{minuteAvg < 10 ? \"0\"+minuteAvg : minuteAvg}:{secondAvg < 10 ? \"0\"+secondAvg : secondAvg}</p>\n\t\t\t\n\t\t\t\n\t\t\t{props.runInfo.mileage > 0 ? (\n\t\t\t\t<Table compact>\n\t\t\t\t\t<Table.Header>\n\t\t\t\t\t\t<Table.Row>\n\t\t\t\t\t\t\t<Table.HeaderCell>Mile</Table.HeaderCell>\n\t\t\t\t\t\t\t<Table.HeaderCell>Time</Table.HeaderCell>\n\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t</Table.Header>\n\t\t\t\t\t<Table.Body>\n\t\t\t\t\t{this.splits.map((time,index)=> (\n\t\t\t\t\t\t<Table.Row key={index}>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t))}\n\t\t\t\t\t</Table.Body>\n\n\t\t\t\t</Table>\n\t\t\t) : null}\n\t\t</div>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}