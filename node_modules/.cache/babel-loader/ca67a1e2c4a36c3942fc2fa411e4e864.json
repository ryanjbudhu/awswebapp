{"ast":null,"code":"var _jsxFileName = \"/Users/ryanbudhu/VentureLinkAssignment/webapp/firstwebapp/src/RunInfo.js\";\nimport React from 'react'; //import RunForm from './RunForm';\n\nimport { Table } from 'semantic-ui-react';\n\nfunction getFormattedTime(time) {\n  const hour = Math.floor(time / 3600);\n  time %= 3600;\n  const minute = Math.floor(time / 60);\n  const second = Math.floor(time % 60);\n  return (hour > 0 ? hour + \":\" : \"\") + (minute < 10 ? \"0\" + minute : minute) + \":\" + (second < 10 ? \"0\" + second : second);\n}\n\nexport default function RunInfo(props) {\n  const timeInSeconds = props.runInfo.hour * 3600 + props.runInfo.minute * 60 + 1 * props.runInfo.second;\n  var avgMile = props.runInfo.mileage !== 0 && timeInSeconds !== 0 ? timeInSeconds / props.runInfo.mileage : \"0\";\n  var splits = [];\n\n  for (var x = 1; x <= props.runInfo.mileage; ++x) {\n    splits.push(getFormattedTime(avgMile * x));\n  } //console.log(splits);\n\n\n  return React.createElement(\"div\", {\n    className: \"runInfo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, props.runInfo.mileage === \"0\" ? React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Fill out the form!\") : React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, props.runInfo.mileage, \" miles\", \" run\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Total Time: \", timeInSeconds), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Average Time: \", avgMile), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Pace Per Mile:\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, getFormattedTime(avgMile)), splits.length > 0 ? React.createElement(Table, {\n    compact: true,\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Table.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Mile\"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Time\"))), React.createElement(Table.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, splits.map((time, index) => React.createElement(Table.Row, {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, index + 1), React.createElement(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, time))))) : null);\n}","map":{"version":3,"sources":["/Users/ryanbudhu/VentureLinkAssignment/webapp/firstwebapp/src/RunInfo.js"],"names":["React","Table","getFormattedTime","time","hour","Math","floor","minute","second","RunInfo","props","timeInSeconds","runInfo","avgMile","mileage","splits","x","push","length","map","index"],"mappings":"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","sourcesContent":["import React from 'react';\n//import RunForm from './RunForm';\nimport { Table } from 'semantic-ui-react';\n\nfunction getFormattedTime(time) {\n\tconst hour = Math.floor(time/3600);\n\ttime %= 3600;\n\tconst minute = Math.floor(time/60);\n\tconst second = Math.floor(time%60);\n\treturn (hour>0 ? hour+\":\" : \"\") + \n\t\t(minute < 10 ? \"0\"+minute : minute) + \":\" + \n\t\t\t(second < 10 ? \"0\"+second : second);\n}\n\nexport default function RunInfo(props) {\n\t\n\tconst timeInSeconds = (props.runInfo.hour*3600) + (props.runInfo.minute*60) + (1*props.runInfo.second);\n\tvar avgMile = (props.runInfo.mileage!==0 && timeInSeconds!==0) ? timeInSeconds/props.runInfo.mileage : \"0\";\n\tvar splits = [];\n\tfor (var x=1;x <= props.runInfo.mileage;++x){\n\t\tsplits.push( getFormattedTime(avgMile*x) );\n\t}\n\t//console.log(splits);\n\t\n\treturn (\n\t\t<div className=\"runInfo\">\n\t\t\t{props.runInfo.mileage === \"0\" ? (\n\t\t\t\t<h2>\n\t\t\t\t\tFill out the form!\n\t\t\t\t</h2>\n\t\t\t) : <h2>{props.runInfo.mileage} miles{/*props.runInfo.unit*/} run</h2>}\n\n\t\t\t<p>Total Time: {timeInSeconds}</p>\n\t\t\t<p>Average Time: {avgMile}</p>\n\t\t\t<h3>Pace Per Mile:</h3>\n\t\t\t<p>{getFormattedTime(avgMile)}</p>\n\t\t\t\n\t\t\t\n\t\t\t{splits.length > 0 ? (\n\t\t\t\t<Table compact size=\"large\">\n\t\t\t\t\t<Table.Header>\n\t\t\t\t\t\t<Table.Row>\n\t\t\t\t\t\t\t<Table.HeaderCell>Mile</Table.HeaderCell>\n\t\t\t\t\t\t\t<Table.HeaderCell>Time</Table.HeaderCell>\n\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t</Table.Header>\n\t\t\t\t\t<Table.Body>\n\t\t\t\t\t{splits.map((time,index)=> (\n\t\t\t\t\t\t<Table.Row key={index}>\n\t\t\t\t\t\t\t<Table.Cell>{index+1}</Table.Cell>\n\t\t\t\t\t\t\t<Table.Cell>{time}</Table.Cell>\n\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t))}\n\t\t\t\t\t</Table.Body>\n\n\t\t\t\t</Table>\n\t\t\t) : null}\n\t\t</div>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}