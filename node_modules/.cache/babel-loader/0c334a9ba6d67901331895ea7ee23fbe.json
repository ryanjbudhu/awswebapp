{"ast":null,"code":"var _jsxFileName = \"/Users/ryanbudhu/VentureLinkAssignment/webapp/firstwebapp/src/RunInfo.js\";\nimport React from 'react'; //import RunForm from './RunForm';\n\nexport default function RunInfo(props) {\n  const timeInSeconds = props.runInfo.hour * 3600 + props.runInfo.minute * 60 + 1 * props.runInfo.second;\n  const avgMile = props.runInfo.mileage !== 0 && timeInSeconds !== 0 ? timeInSeconds / props.runInfo.mileage : 0;\n  const hourAvg = Math.floor(avgMile / 3600);\n  const minuteAvg = hourAvg !== 0 ? Math.floor(avgMile % 3600 / 60) : Math.floor(avgMile / 60);\n  const secondAvg = hourAvg !== 0 ? Math.floor(minuteAvg % 3600 / 3600) : Math.floor(avgMile / 60);\n  return React.createElement(\"div\", {\n    className: \"runInfo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, props.runInfo.mileage === \"0\" ? React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Fill out the form!\") : React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, props.runInfo.mileage, \" miles\", \" run\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Total Time: \", timeInSeconds), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Average Time: \", avgMile), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, hourAvg > 0 ? hourAvg + \":\" : \"\", minuteAvg, \":\", secondAvg));\n}","map":{"version":3,"sources":["/Users/ryanbudhu/VentureLinkAssignment/webapp/firstwebapp/src/RunInfo.js"],"names":["React","RunInfo","props","timeInSeconds","runInfo","hour","minute","second","avgMile","mileage","hourAvg","Math","floor","minuteAvg","secondAvg"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAEtC,QAAMC,aAAa,GAAID,KAAK,CAACE,OAAN,CAAcC,IAAd,GAAmB,IAApB,GAA6BH,KAAK,CAACE,OAAN,CAAcE,MAAd,GAAqB,EAAlD,GAAyD,IAAEJ,KAAK,CAACE,OAAN,CAAcG,MAA/F;AACA,QAAMC,OAAO,GAAIN,KAAK,CAACE,OAAN,CAAcK,OAAd,KAAwB,CAAxB,IAA6BN,aAAa,KAAG,CAA9C,GAAmDA,aAAa,GAACD,KAAK,CAACE,OAAN,CAAcK,OAA/E,GAAyF,CAAzG;AACA,QAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWJ,OAAO,GAAC,IAAnB,CAAhB;AACA,QAAMK,SAAS,GAAIH,OAAO,KAAG,CAAV,GAAcC,IAAI,CAACC,KAAL,CAAYJ,OAAO,GAAC,IAAT,GAAe,EAA1B,CAAd,GAA8CG,IAAI,CAACC,KAAL,CAAWJ,OAAO,GAAC,EAAnB,CAAjE;AACA,QAAMM,SAAS,GAAIJ,OAAO,KAAG,CAAV,GAAcC,IAAI,CAACC,KAAL,CAAYC,SAAS,GAAC,IAAX,GAAiB,IAA5B,CAAd,GAAkDF,IAAI,CAACC,KAAL,CAAWJ,OAAO,GAAC,EAAnB,CAArE;AAEA,SACC;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEN,KAAK,CAACE,OAAN,CAAcK,OAAd,KAAwB,GAAxB,GACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADA,GAIG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKP,KAAK,CAACE,OAAN,CAAcK,OAAnB,mBALL,EAOC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAgBN,aAAhB,CAPD,EAQC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAkBK,OAAlB,CARD,EAUC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIE,OAAO,GAAC,CAAR,GAAYA,OAAO,GAAC,GAApB,GAA0B,EAA9B,EAAkCG,SAAlC,OAA8CC,SAA9C,CAVD,CADD;AAmBA","sourcesContent":["import React from 'react';\n//import RunForm from './RunForm';\n\nexport default function RunInfo(props) {\n\t\n\tconst timeInSeconds = (props.runInfo.hour*3600) + (props.runInfo.minute*60) + (1*props.runInfo.second);\n\tconst avgMile = (props.runInfo.mileage!==0 && timeInSeconds!==0) ? timeInSeconds/props.runInfo.mileage : 0;\n\tconst hourAvg = Math.floor(avgMile/3600);\n\tconst minuteAvg = (hourAvg!==0 ? Math.floor((avgMile%3600)/60) : Math.floor(avgMile/60));\n\tconst secondAvg = (hourAvg!==0 ? Math.floor((minuteAvg%3600)/3600) : Math.floor(avgMile/60));\n\t\n\treturn (\n\t\t<div className=\"runInfo\">\n\t\t\t{props.runInfo.mileage===\"0\" ? (\n\t\t\t\t<h2>\n\t\t\t\t\tFill out the form!\n\t\t\t\t</h2>\n\t\t\t) : <h2>{props.runInfo.mileage} miles{/*props.runInfo.unit*/} run</h2>}\n\n\t\t\t<p>Total Time: {timeInSeconds}</p>\n\t\t\t<p>Average Time: {avgMile}</p>\n\t\t\t\n\t\t\t<p>{hourAvg>0 ? hourAvg+\":\" : \"\"}{minuteAvg}:{secondAvg}</p>\n\t\t\t\n\t\t\t\n\t\t\t\t\t\t{/*props.runLogs.map((runLog,index)=> (\n\t\t\t\t<RunLog key={index} log={runLog} />\n\t\t\t))*/}\n\t\t</div>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}