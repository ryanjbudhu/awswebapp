{"ast":null,"code":"import _objectSpread from \"/Users/ryanbudhu/VentureLinkAssignment/webapp/firstwebapp/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/ryanbudhu/VentureLinkAssignment/webapp/firstwebapp/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport RunForm from './RunForm';\nimport RunInfo from './RunInfo';\nimport '../node_modules/semantic-ui-css/semantic.min.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      spinning: true,\n      mileage: \"0\",\n      unit: \"\",\n      hour: \"0\",\n      minute: \"0\",\n      second: \"0\"\n    };\n    this.updateInfo = this.updateInfo.bind(this);\n  }\n\n  updateInfo(info) {\n    console.log(info);\n    this.setState(_objectSpread({}, this.state, {\n      mileage: info.mileage,\n      unit: info.unit,\n      hour: info.hour,\n      minute: info.minute,\n      second: info.second\n    }));\n  }\n\n  render() {\n    const loadingSpin = this.state.spinning ? \"App-logo Spin\" : \"App-logo\";\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      className: loadingSpin,\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      className: \"App-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Run Analyzer\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"This webapp allows you to understand what shape you are in based on your last run pace.\")), React.createElement(\"div\", {\n      className: \"Row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App-column-form centered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Run Information\"), React.createElement(RunForm, {\n      onChange: e => this.updateInfo(props, e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"App-column-feed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(RunInfo, {\n      runInfo: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ryanbudhu/VentureLinkAssignment/webapp/firstwebapp/src/App.js"],"names":["React","Component","RunForm","RunInfo","App","constructor","props","state","spinning","mileage","unit","hour","minute","second","updateInfo","bind","info","console","log","setState","render","loadingSpin","logo","e"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,kDAAP;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAC1BI,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,IADC;AAEXC,MAAAA,OAAO,EAAE,GAFE;AAGXC,MAAAA,IAAI,EAAE,EAHK;AAIXC,MAAAA,IAAI,EAAE,GAJK;AAKXC,MAAAA,MAAM,EAAE,GALG;AAMXC,MAAAA,MAAM,EAAE;AANG,KAAb;AASA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACD;;AAEDD,EAAAA,UAAU,CAACE,IAAD,EAAO;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,SAAKG,QAAL,mBACK,KAAKZ,KADV;AAEEE,MAAAA,OAAO,EAAEO,IAAI,CAACP,OAFhB;AAGEC,MAAAA,IAAI,EAAEM,IAAI,CAACN,IAHb;AAIEC,MAAAA,IAAI,EAAEK,IAAI,CAACL,IAJb;AAKEC,MAAAA,MAAM,EAAEI,IAAI,CAACJ,MALf;AAMEC,MAAAA,MAAM,EAAEG,IAAI,CAACH;AANf;AAQD;;AAGDO,EAAAA,MAAM,GAAG;AACP,UAAMC,WAAW,GAAG,KAAKd,KAAL,CAAWC,QAAX,GAAsB,eAAtB,GAAwC,UAA5D;AACA,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAEc,IAAV;AAAgB,MAAA,SAAS,EAAED,WAA3B;AAAwC,MAAA,GAAG,EAAC,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iGALF,CADF,EASE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE,oBAAC,OAAD;AAAS,MAAA,QAAQ,EAAGE,CAAD,IAAO,KAAKT,UAAL,CAAgBR,KAAhB,EAAsBiB,CAAtB,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAME;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AACE,MAAA,OAAO,EAAE,KAAKhB,KADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CANF,CATF,CADF;AA2BD;;AA1DyB;;AA6D5B,eAAeH,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport RunForm from './RunForm';\nimport RunInfo from './RunInfo';\nimport '../node_modules/semantic-ui-css/semantic.min.css'\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    \n    this.state = {\n      spinning: true,\n      mileage: \"0\",\n      unit: \"\",\n      hour: \"0\",\n      minute: \"0\",\n      second: \"0\"\n    };\n    \n    this.updateInfo = this.updateInfo.bind(this);\n  }\n  \n  updateInfo(info) {\n    console.log(info);\n    this.setState({\n      ...this.state,\n      mileage: info.mileage,\n      unit: info.unit,\n      hour: info.hour,\n      minute: info.minute,\n      second: info.second\n    });\n  }\n  \n  \n  render() {\n    const loadingSpin = this.state.spinning ? \"App-logo Spin\" : \"App-logo\";\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className={loadingSpin} alt=\"logo\" />\n          <h1 className=\"App-title\">\n            Run Analyzer\n          </h1>\n          <p>This webapp allows you to understand what shape you are in based on your last run pace.</p>\n        </header>\n        \n        <div className=\"Row\">\n          <div className=\"App-column-form centered\">\n            <h2>Run Information</h2>\n            <RunForm onChange={(e) => this.updateInfo(props,e)} />\n            {/* Form Component */}\n          </div>\n          <div className=\"App-column-feed\">\n            <RunInfo\n              runInfo={this.state}\n            />\n            {/* Run feed Component */}\n          </div>\n        </div>\n        \n        \n      </div>\n    )\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}